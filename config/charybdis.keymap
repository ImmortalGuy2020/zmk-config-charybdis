#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
    require-prior-idle-ms = <10>;
};

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";

        LeftClickRight {
            bindings = <&mkp LCLK>;
            key-positions = <16 17>;
        };

        RightClickRight {
            bindings = <&mkp RCLK>;
            key-positions = <17 18>;
        };

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <14 15>;
        };

        scroll {
            bindings = <&mo 4>;
            key-positions = <16 17 18>;
        };
    };

    behaviors {
        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <34>;
            tapping-term-ms = <100>;
        };
    };

    macros {
        quicker: quicker {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LCTRL>, <&macro_press>;

            label = "QUICKER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC         &kp N1   &kp N2  &kp N3    &kp N4        &kp N5           &kp N6   &kp N7     &kp N8     &kp N9   &kp N0       &kp BSPC
&kp TAB         &kp Q    &kp W   &kp E     &kp R         &kp T            &kp Y    &kp U      &kp I      &kp O    &kp P        &kp BSLH
&kp LEFT_SHIFT  &kp A    &kp S   &kp D     &kp F         &kp G            &kp H    &kp J      &kp K      &kp L    &kp SEMI     &kp APOS
&kp LCTRL       &lt 3 Z  &kp X   &kp C     &kp V         &kp B            &kp N    &kp M      &kp COMMA  &kp DOT  &lt 3 SLASH  &kp RSHFT
                                 &kp LGUI  &kp SPACE     &mo 1            &mo 2    &kp ENTER
                                           &kp LEFT_ALT  &kp BACKSPACE    &kp DEL
            >;

        };

        layer_1 {
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp HASH      &kp DOLLAR  &kp DOLLAR      &kp PERCENT    &kp CARET         &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&none      &none            &none         &none       &none           &none          &kp LEFT_BRACKET  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9          &kp RIGHT_BRACKET      &none
&none      &kp LEFT_WIN     &kp LEFT_ALT  &kp LCTRL   &kp LEFT_SHIFT  &none          &kp PLUS          &kp NUMBER_4   &kp NUMBER_5  &kp NUMBER_6          &kp MINUS              &kp EQUAL
&none      &none            &none         &none       &none           &none          &kp ASTERISK      &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3          &kp SLASH              &kp PERIOD
                                          &none       &none           &trans         &none             &trans
                                                      &none           &none          &kp NUMBER_0
            >;
        };

        layer_2 {
            bindings = <
&kp F12     &kp F1    &kp F2        &kp F3          &kp F4           &kp F5    &kp F6  &kp F7           &kp F8     &kp F9         &kp F10        &kp F11
&kp C_NEXT  &none     &none         &none           &none            &none     &none   &none            &none      &none          &none          &kp C_VOL_UP
&kp C_PLAY  &kp LEFT  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none     &none   &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_WIN  &kp K_MUTE
&kp C_PREV  &none     &none         &none           &none            &none     &none   &none            &none      &none          &none          &kp C_VOL_DN
                                    &trans          &trans           &none     &trans  &none
                                                    &trans           &trans    &none
            >;
        };

        SCROLL {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };

        SYM {
            bindings = <
  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
  &trans           &trans       &trans    &trans      &none          &none      &kp MINUS       &kp EQUAL     &kp SEMICOLON         &kp BACKSLASH
  &none            &none        &none     &none       &none          &none      &kp UNDERSCORE  &kp PLUS      &kp LEFT_BRACKET      &kp RIGHT_BRACKET
                                &trans    &trans      &trans         &trans     &trans
            >;
        };

        Mouse {
            bindings = <
  &trans  &trans  &trans     &trans     &trans       &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans     &trans     &trans       &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans     &trans     &trans       &trans  &trans  &trans  &trans  &trans
                  &mkp RCLK  &mkp LCLK  &mkp MCLK    &trans  &trans
            >;
        };

        snipe {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
